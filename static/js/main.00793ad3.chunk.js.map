{"version":3,"sources":["Components/ChatInput.js","Components/ChatMessage.js","Components/firebase.js","Components/Chat.js","Components/Login.js","Components/Header.js","data/SidebarData.js","Components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","sentMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","styled","div","button","Send","SendIcon","ChatMessage","text","name","image","timestamp","UserAvatar","src","MessageContent","Name","Date","toDate","toUTCString","Text","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMassage","useEffect","collection","doc","onSnapshot","snapshot","data","console","log","orderBy","docs","map","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer","length","index","userImage","payload","Timestamp","now","photo","add","InfoOutlinedIcon","Login","props","Content","SlackImg","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","signOut","Main","SearchContainer","Search","UserContainer","UserImage","sidebarItemsDta","icon","Sidebar","history","useHistory","WorkspaceContainer","NewMassage","MainChannels","item","MainChannelsItems","ChannelContainer","NewChannelContainer","promptName","prompt","ChannelsList","rooms","id","push","App","setRooms","getItem","className","removeItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00793ad3.chunk.js","sourcesContent":["import React, { useState} from 'react'\nimport styled from 'styled-components'\nimport SendIcon from '@material-ui/icons/Send';\nfunction ChatInput({ sentMessage}) {\n\n\n    const [input, setInput] = useState(\"\")\n\n    const send = (e) => {\n        e.preventDefault();\n        if(!input) return;\n        sentMessage(input)\n    }\n\n    return (\n        <Container>\n            <InputContainer>\n                <form>\n                    <input \n                        onChange = {(e) =>setInput(e.target.value)}\n                        type = 'text' \n                        placeholder = \"Message type here .....\" />\n                    <SendButton\n                        type = \"submit\" \n                        onClick = {send}>\n                        <Send />\n                    </SendButton>\n                </form>\n            </InputContainer>\n        </Container>\n    )\n}\n\nexport default ChatInput\n\nconst Container = styled.div`\n    padding : 0 20px 24px 20px;\n`\nconst InputContainer = styled.div`\n    border : 1px solid #8D8D8E;\n    border-radius : 4px;\n\n    form{\n        display : flex;\n        height : 42px;\n        align-items : center;\n        padding-left : 10px;\n\n        input{\n            flex : 1;\n            border : none;\n            font-size : 13px;\n        }\n\n        input:focus{\n            outline : none;\n        }\n    }\n`\nconst SendButton = styled.button`\n    background : #007a5a;\n    border-radius : 2px;\n    width : 32px;\n    height : 32px;\n    display : flex;\n    justify-content : center;\n    align-items : center;\n    margin-right : 5px;\n    cursor : pointer;\n    border : none;\n\n    .MuiSvgIcon-root{\n        width : 18px;\n    }\n\n    :hover{\n        background : #148567;\n    }\n`\nconst Send = styled(SendIcon)`\n    color : #D9D9D9;\n`","import React from 'react'\nimport styled from 'styled-components'\n\n\nfunction ChatMessage({text, name, image, timestamp}) {\n    return (\n        <Container>\n            <UserAvatar>\n                <img src = {image}/>\n            </UserAvatar>\n            <MessageContent>\n                <Name>\n                    { name }\n                    <span>{ new Date(timestamp.toDate()).toUTCString()}</span>\n                </Name>\n                <Text>\n                    { text}\n                </Text>\n            </MessageContent>\n        </Container>\n    )\n}\n\nexport default ChatMessage\n\nconst Container = styled.div`\n    padding : 8px 20px;\n    display : flex;\n    align-items : center;\n`\nconst UserAvatar = styled.div`\n    width : 36px;\n    height : 36px;\n    border-radius : 2px;\n    overflow : hidden;\n    margin-right : 8px;\n\n    img{\n        width : 100%\n    }\n`\nconst MessageContent = styled.div`\n    display : flex;\n    flex-direction : column;\n`\nconst Name = styled.div`\n    font-weight :900;\n    font-size : 15px;\n    line-height : 1.4;\n    \n    span{\n        font-weight : 400;\n        color : rgb(97,96,97);\n        margin-left : 8px;\n        font-size : 13px;\n    }\n\n`\nconst Text = styled.div`\n\n`","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDiewGy8joDCNMSwY9NZti0zsPqcjb6gsc\",\n    authDomain: \"arokyaillam-slack.firebaseapp.com\",\n    projectId: \"arokyaillam-slack\",\n    storageBucket: \"arokyaillam-slack.appspot.com\",\n    messagingSenderId: \"903738759222\",\n    appId: \"1:903738759222:web:56239e13fdf0c8e1962097\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export {auth, provider}\n  export default db;\n  ","import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport ChatInput from './ChatInput'\nimport ChatMessage from './ChatMessage'\nimport db from './firebase'\nimport { useParams } from 'react-router-dom'\nimport firebase from 'firebase'\n\nfunction Chat({ user}) {\n\n    let { channelId } = useParams();\n    const [channel, setChannel ] = useState();\n    const [ messages, setMassage ] = useState([])\n\n    const getMessages = () => {\n        db.collection('rooms')\n        .doc(channelId)\n        .collection('messages')\n        .orderBy('timestamp', 'asc')\n        .onSnapshot((snapshot) => {\n            let messages = snapshot.docs.map((doc) => doc.data());\n            console.log(messages)\n            setMassage(messages);\n        })\n    }\n\n\n    const sentMessage = (text) => {\n        if(channelId){\n            let payload = {\n                text : text,\n                timestamp : firebase.firestore.Timestamp.now(),\n                user : user.name,\n                userImage : user.photo\n            }\n            \n            db.collection(\"rooms\").doc(channelId).collection('messages').add(payload)\n            \n            console.log(payload)\n        }\n    }\n    \n    const getChannel = () => {\n        db.collection('rooms')\n        .doc(channelId)\n        .onSnapshot((snapshot) => {\n            setChannel(snapshot.data());\n            console.log(messages)\n            setMassage(messages)\n        })\n    }\n\n    useEffect(() => {\n        getChannel();\n        getMessages();\n    }, [channelId])\n\n\n    return (\n        <Container>\n            <Header>\n                <Channel>\n                    <ChannelName>\n                        # {channel && channel.name}\n                    </ChannelName>\n                    <ChannelInfo>\n                     Company-wide announcement   \n                    </ChannelInfo>\n                </Channel>\n                <ChannelDetails>\n                    <div>\n                        Details\n                    </div>\n                    <Info />\n                </ChannelDetails>\n            </Header>\n            <MessageContainer>\n                {\n                    messages.length > 0 && \n                    messages.map((data, index) => (\n                        <ChatMessage \n                            text = {data.text}\n                            name = {data.user}\n                            image = {data.userImage}\n                            timestamp = {data.timestamp}\n                        />\n                    ))\n                }\n            </MessageContainer>\n            <ChatInput sentMessage = { sentMessage}/>\n        </Container>\n    )\n}\n\nexport default Chat;\n\nconst Container = styled.div`\n     display : grid;\n     grid-template-rows : 64px auto min-content;\n`\nconst Header = styled.div`\n    padding : 0 20px 0 20px;\n    display : flex;\n    align-items : center;\n    border-bottom : 1px solid rgba(83, 39, 83, .13);\n    justify-content : space-between;\n`\nconst MessageContainer = styled.div`\n\n`\nconst Channel = styled.div`\n\n`\nconst ChannelName = styled.div`\n    font-weight : 700;\n`\n\nconst ChannelInfo = styled.div`\n    font-weight : 400;\n    color : #606060;\n    font-size : 13px;\n    margin-top : 8px;\n`\nconst ChannelDetails =styled.div`\n    display : flex;\n    align-items : center;\n    color : #606060;\n`\nconst Info = styled(InfoOutlinedIcon)`\n    margin-left : 10px;\n    color : #606060\n`","import React from 'react'\nimport styled from 'styled-components'\nimport {auth, provider} from './firebase'\n\nfunction Login(props) {\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n        .then((result)=>{\n            const newUser = {\n                name : result.user.displayName,\n                photo : result.user.photoURL\n            } \n            localStorage.setItem('user', JSON.stringify(newUser))       \n            props.setUser(newUser);\n        })\n        .catch((error) => {\n            alert(error.message)\n        })\n    }\n\n    return (\n        <Container>\n            <Content>\n                <SlackImg src = \"https://a.slack-edge.com/80588/marketing/img/icons/icon_slack_hash_colored.png\" />\n            <h1>Sign in Slack</h1>\n            <SignInButton onClick ={() => signIn()}>\n            Sign In With Google\n            </SignInButton>                \n            </Content>\n        </Container>\n    )\n}\n\nexport default Login\n\n\n\nconst Container = styled.div`\n    width : 100%;\n    height : 100vh;\n    background-color : #f8f8f8;\n    display : flex;\n    justify-content : center;\n    align-items : center;\n`\nconst Content = styled.div`\n    background-color : white;\n    padding :100px;\n    border-radius : 5px;\n    box-shadow : 0 1px 3px rgb(0 0 0 / 12%), 0 1px 2px rgb(0 0 0 / 24%);\n    display : flex;\n    flex-direction : column;\n    justify-content : center;\n    align-items : center;\n`\nconst SlackImg = styled.img`\n    height : 100px;\n\n`\nconst SignInButton = styled.button`\n    margin-top : 50px;\n    background-color : #8a8d48;\n    color : white;\n    border : none;\n    height : 40px;\n    border-radius : 4px;\n    cursor : pointer;\n    font-size : 15px;\n`","import React from 'react'\nimport styled from 'styled-components'\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nfunction Header({ user, signOut }) {\n    return (\n        <div>\n            <Container>\n            <Main>\n                <AccessAlarmIcon />\n                    <SearchContainer>\n                        <Search>\n                            <input type=\"text\" placeholder=\"Search\" />\n                        </Search>\n                    </SearchContainer>\n                <HelpOutlineIcon />\n            </Main>\n            <UserContainer>\n                <Name>\n                    {user.name}\n                </Name>\n                <UserImage onClick = {signOut}>\n                    <img src={user.photo ? user.photo : \"https://i.imgur.com/6VBx3io.png\"} />\n                </UserImage>\n            </UserContainer>\n            </Container>\n        </div>\n    )\n}\n\nexport default Header\n\n\nconst Container = styled.div`\n    background : #350d36;\n    color : white;\n    display : flex;\n    align-items : center;\n    justify-content : center;\n    height : 38px;\n    position : relative;\n    box-shadow : 0 1px 0 0 rgb(255 255 255 / 10%);\n`\n\nconst Main = styled.div`\n    display : flex;\n    margin : 0 16px 0 16px;\n`\n\nconst SearchContainer = styled.div`\n    min-width : 400px;\n    margin : 0 16px 0 16px;\n\n`\n\nconst Search = styled.div`\n    box-shadow : inset 0 0 0 1px rgb(104 74 104);\n    width : 100%;\n    border-radius : 6px;\n\ninput{\n    background-color : transparent;\n    border : none;\n    padding : 4px 8px 4px 8px;\n    color : white;\n}\n\ninput:focus{\n    outline : none;\n}\n\n`\n\nconst UserContainer = styled.div`\n    display : flex;\n    align-items : center;\n    padding-right : 16px;\n    position : absolute;\n    right : 0;\n`\nconst Name = styled.div`\n    padding-right : 16px;\n`\n\nconst UserImage = styled.div`\n    width : 28px;\n    height : 28px;\n    border : 2px solid white;\n    border-radius : 3px;\n    cursor : pointer;\n\nimg{\n    width : 100%\n}\n`","\nimport MessageIcon from '@material-ui/icons/Message';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AppsIcon from '@material-ui/icons/Apps';\n\nexport const sidebarItemsDta = [\n    {\n        icon :  <MessageIcon />,\n        text : \"Thread\"\n    },\n    {\n        icon :  <InboxIcon />,\n        text : \"All DMs\"\n    },\n    {\n        icon :  <DraftsIcon />,\n        text : \"Mentions & Reactions\"\n    },\n    {\n        icon :  <BookmarkIcon />,\n        text : \"Save Items\"\n    }, \n    {\n        icon :  <PeopleIcon />,\n        text : \"People & Groups\"\n    },\n    {\n        icon :  <AppsIcon />,\n        text : \"More\"\n    }\n]","import React from 'react'\nimport styled from 'styled-components'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport {sidebarItemsDta} from '../data/SidebarData'\nimport AddIcon from '@material-ui/icons/Add';\nimport db from './firebase'\nimport { useHistory } from 'react-router-dom'\n\n\nfunction Sidebar(props) {\n\n\n    const history = useHistory();\n\n    const goToChannel = (id) => {\n        if(id){\n            console.log(id);\n            history.push(`/room/${id}`)\n        }\n    }\n\n    const addChannel = () =>{\n        const promptName = prompt(\"Enter channel name\");\n        if(promptName){\n            db.collection('rooms').add({\n                name : promptName\n            })\n        }\n    }\n\n    return (\n        <Container>\n            <WorkspaceContainer>\n                <Name>\n                    Arokyaillam\n                </Name>\n                <NewMassage>\n                    <AddCircleOutlineIcon />\n                </NewMassage>\n            </WorkspaceContainer>\n            <MainChannels>\n                {\n                    sidebarItemsDta.map(item => (\n                        <MainChannelsItems>\n                            {item.icon}\n                            {item.text}\n                        </MainChannelsItems>\n                    ))\n                }\n            </MainChannels>\n            <ChannelContainer>\n                <NewChannelContainer>\n                    <div>\n                        Channels\n                    </div>\n                    <AddIcon onClick = {addChannel} />\n                </NewChannelContainer>\n                <ChannelsList>\n                    {\n                        props.rooms.map(item =>(\n                            <Channel onClick = {() => goToChannel(item.id)}>\n                                # {item.name}\n                            </Channel>  \n                        ))\n                    }\n                </ChannelsList>\n            </ChannelContainer>\n        </Container>\n    )\n}\n\nexport default Sidebar\n\nconst Container = styled.div`\n    background : #3F0E40;\n`\nconst WorkspaceContainer = styled.div`\n    color : white;\n    height : 64px;\n    display : flex;\n    align-items : center;\n    padding-left : 19px;\n    justify-content : space-between;\n    border-bottom : 1px solid #532753;\n`\nconst Name = styled.div`\n\n`\nconst NewMassage = styled.div`\n    width : 36px;\n    height : 36px;\n    background : white;\n    color : #3F0E40;\n    fill : #3F0E40;\n    display :flex;\n    justify-content : center;\n    align-items : center;\n    border-radius : 50%;\n    margin-right : 20px;\n    cursor : pointer;\n`\n\nconst MainChannels = styled.div`\n\n`\nconst MainChannelsItems = styled.div`\n    color : rgb(188,172,188);\n    display : grid;\n    grid-template-columns : 15% auto;\n    height : 28px;\n    align-items : center;\n    padding-left : 19px;\n    cursor : pointer;\n    :hover {\n        background : #350D36;\n    }\n    `\nconst ChannelContainer = styled.div`\n    color : rgb(188,172,188);\n    margin-top : 10px;\n`\nconst NewChannelContainer = styled.div`\n    display : flex;\n    justify-content : space-between;\n    align-items : center;\n    height : 28px;\n    padding : 0 12px 0 19px;\n    cursor : pointer;\n`\n\nconst ChannelsList = styled.div`\n    \n`\nconst Channel = styled.div`\n    height : 28px;\n    display : flex;\n    align-items : center;\n    padding-left: 19px;\n    cursor : pointer;\n    :hover {\n        background : #350D36;\n    }\n`","import './App.css';\nimport { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch, } from \"react-router-dom\"\nimport Chat from './Components/Chat'\nimport Login from './Components/Login';\nimport styled from 'styled-components'\nimport Header from './Components/Header'\nimport Sidebar from './Components/Sidebar'\nimport db from './Components/firebase'\nimport { auth, provider} from './Components/firebase'\nfunction App() {\n\n  const [rooms, setRooms] = useState([])\n  const [user, setUser] = useState(localStorage.getItem(\"user\"))\n\n\n  const getChannels = () => {\n    db.collection('rooms').onSnapshot((snapshot) => {\n      setRooms(snapshot.docs.map((doc) => {\n        return { id: doc.id, name: doc.data().name }\n      }))\n    })\n\n  }\n\n  const signOut = () =>{\n    auth.signOut().then(() =>{\n      localStorage.removeItem(\"user\")\n      setUser(null);\n    })\n  }\n  useEffect(() => {\n    getChannels()\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {\n          !user ?\n            <Login setUser = {setUser}/>\n            :\n\n            <Container>\n              <Header signOut = {signOut} user = {user}/>\n              <Main>\n                <Sidebar rooms={rooms} />\n                <Switch>\n                  <Route path=\"/room/:channelId\">\n                    <Chat user = { user }/>\n                  </Route>\n                  <Route path = \"/\">\n                    Seclct r create\n                  </Route>\n                </Switch>\n              </Main> \n            </Container>\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n    width : 100%;\n    height : 100vh;\n    display : grid;\n    grid-template-rows : 38px auto; \n`\nconst Main = styled.div`\n    display : grid;\n    grid-template-columns : 260px auto;\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}